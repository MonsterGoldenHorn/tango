package com.priva.tango.exam;

/**
 * 可靠性
 */
public class Reliable {
    /*软件可靠性*/
    /**
     * >>定义
     * 可靠性是软件系统在应用或系统错误面前，在意外或错误使用的情况下维持软件系统的功能特性的基本能力。
     * 可用性是系统能够正常运行的时间比例。
     * >>软硬件可靠性对比：
     *  复杂性:软件复杂性比硬件高，大部分失效来自于软件失效
     *  物理退化:硬件失效主要是物理退化所致，软件不存在物理退化。
     *  唯一性:软件是唯一的，每个COPY版本都一样，而两个硬件不可能完全一样。
     *  版本更新周期:硬件较慢，软件较快。
     *
     *  >>框架性定义
     *       在规定的时间，条件，所要求满足的功能，具有的特点
     *       比如要求在每日夜间系统支持2000并发，且满足数据不丢失
     *
     *  >> 定量描述
         ①可靠度R：软件在规定时间内不发生失效的概率。
         该参数适用于特别不希望出现失效的系统，如航天电子系统、过程控制系统等。
         ②失效率、失效强度：
         失效率是指在t时刻尚未发生失效的条件下，在t时刻后单元时间内发生失效的概率；
         失效强度是指失效数均值随时间的变化率。在稳定使用软件且不对软件做任何修改的条件下，软件失效强度应该常数。这种情况下，失效时间服从参数为λ的指数分布，任一时间点上的失效率为λ。
         失效率/失效强度适用于失效发生频率比较重要的系统，如操作系统。
         ③MTTF/MTBF：
         MTTF：平均失效前时间；MTBF：平均失效间隔时间。
     */
    /*可靠性设计*/
    /**
     * 容错设计：
     *      信息容错  校验码、日志            恢
     *      结构容错  备份
     *      时间容错  重算
     *  方法：
     *      N版本： 向前恢复，最后表决结果
     *      恢复块  向后恢复
     */
}
