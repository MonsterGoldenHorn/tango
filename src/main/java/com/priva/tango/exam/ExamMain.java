package com.priva.tango.exam;

public class ExamMain {

    /**
     * 软件开发方法
     * 结构化   注重数据流DFD进行功能建模，状态转换图表示行为模型
     * 面向对象  UML
     *          类图:一组类、接口、协作和它们之间的关系
     *          对象图:一组对象及它们之间的关系
     *          构件图:一个封装的类和它的接口
     *          部署图:软硬件之间映射
     *          制品图:系统的物理结构
     *          包图:由模型本身分解而成的组织单元，以及它们之间的依赖关系
     *          用例图: 系统与外部参与者的交互
     *          顺序图: 强调按时间顺序
     *          通信图 (协作图)
     *          状态图:状态转换变迁
     *          活动图:类似程序流程图，并行行为
     *          定时图: 强调实际时间
     *          交互概览图
     *          组合结构图
     *     4+1视图。 逻辑视图  分析设计人员
     *              实现视图    程序员
     *              进程视图    系统集成人员
     *              部署视图    运维，网络工
     *              用例视图    最终用户
     *
     * 面向服务
     */
    /**
     * 过程模型
     *  瀑布  sdlc  从需求，软件设计，开发设计，编码实现，单元测试，集成测试，系统测试到运行维护
     *  V模型
     *  原型模型
     *  螺旋模型  原型+瀑布  每个阶段目标分析，  风险分析   ，开发验证，评审
     *  构建组装模型  cbse
     *  快速应用开发  rad 瀑布+构建
     *  统一过程/开发方法  用例驱动，架构中心，迭代增量 （迭代：新增或优化  增量：新增）
     *          四大过程/阶段：初始，细化，构造，移交
     *         核心工作流： 业务建模，需求，分析设计，实现，测试，部署，配置与变更管理，项目管理，环境
     *  敏捷开发    适应性，以人为本，增量迭代，小型项目
     *         价值观 极限编程 XP  接近螺旋开发：
     *          加强面对面沟通，减少文档
     *          简单不过度设计，替换代价小
     *          及时反馈
     *          勇气，对变更说yes
     *         水晶方法：机动性的方法，不同项目不同敏捷方式
     *         SCRUM：  敏捷过程，偏项目管理
     *         特征驱动开发 FDD：开发三要素 （人，过程，技术）
     *                  关键角色：PM，CTO，开发经理，主程序，程序，领域专家
     */
    /**
     *  净室软件
     *  受控污染级别的环境
     *  使用盒结构规约，或形式化方法进行分析和设计建模，  强调将正确性验证而不是测试   个人理解正确性验证的覆盖度
     *  总体太大要使用统计学原理抽样方式
     */
}
